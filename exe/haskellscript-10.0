#!/usr/bin/env bash

set -ex

lts=10.0
script=$1

test -n "$script"

shift 1

tmp=$(mktemp ./XXXXXX.hs)

cat >$tmp <<EOF
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# LANGUAGE UnicodeSyntax #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# OPTIONS_GHC -fdefer-type-errors #-}
{-# OPTIONS_GHC -Wdeferred-out-of-scope-variables #-}

import qualified HaskellScript
import qualified ClassyPrelude
import qualified Control.Lens as Lens
import qualified Data.Time as Time
import qualified Prelude
import qualified System.Directory as Sys
import qualified Text.Printf as Printf
import qualified Turtle

--------------------------------------------------------------------------------

EOF

cat "$script" >> "$tmp"

echo $tmp
stack script --resolver=lts-$lts "$tmp" "$@"
rm $tmp
